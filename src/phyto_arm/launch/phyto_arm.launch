<launch>
    <!-- Most settings are in config.yaml, which is easier to edit -->
    <rosparam command="load" file="$(find phyto_arm)/launch/config.yaml" />

    <!-- Launch file for recording rosbags -->
    <include file="$(find phyto_arm)/launch/rosbag.launch" />

    <!--
        Node: nmea_listener

        This node receives UDP packets from the AirLink MP70 and rebroadcasts
        them as ROS messages.
    -->
    <node name="nmea_listener" pkg="ds_sensors" type="sensor" 
        args="--sensor=xeos_gps" />

    <!--
        Node: instant_replay

        This node makes historical video clips available for diagnostics.
    -->
    <node name="instant_replay" pkg="phyto_arm" type="instant_replay_node.py" />

    <!--
        Node: jvl_motor

        This node communicates with a JVL motor and publishes register status.
    -->
    <node name="jvl_motor" pkg="jvl_motor" type="jvl_motor_node.py" />

    <!--
        Node: rbr_comms

        This node bridges the RBR maestro3 serial connection to ROS.
    -->
    <node name="rbr_comms" pkg="ds_util_nodes" type="bridge_node" />

    <!--
        Node: rbr_maestro3

        This node controls the RBR maestro3.
    -->
    <node name="rbr_maestro3" pkg="rbr_maestro3" type="rbr_maestro3_node.py" />

    <!--
        Node: web

        This node serves a website for testing purposes.
    -->
    <node name="web" pkg="phyto_arm" type="web_node.py" />

    <!--
        Node: rosbridge_server

        This node runs the Rosbridge (http://wiki.ros.org/rosbridge_suite) 
        WebSocket server on port 9090 and is necessary for connecting from 
        Webviz.
    -->
    <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch"
        />

    <!--
        Node: rtsp_camera_relay

        This node relays frames from the RTSP camera feed.
    -->
    <include file="$(find rocon_rtsp_camera_relay)/launch/rtsp_camera_relay.launch">
        <arg name="video_stream_url" value="rtsp://admin:password@example.com/camera" />
    </include>
</launch>
