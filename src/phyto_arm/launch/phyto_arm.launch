<launch>
    <!-- Most settings are in config.yaml, which is easier to edit -->
    <rosparam command="load" file="$(arg config_file)" />

    <!-- Launch file for recording rosbags -->
    <include file="$(find phyto_arm)/launch/rosbag.launch"
        pass_all_args="true" />

    <!--
        Node: nmea_listener

        This node receives UDP packets from the AirLink MP70 and rebroadcasts
        them as ROS messages.
    -->
    <node name="nmea_listener" pkg="ds_sensors" type="sensor" 
        args="--sensor=xeos_gps" />

    <!--
        Node: instant_replay

        This node makes historical video clips available for diagnostics.
    -->
    <node name="instant_replay" pkg="phyto_arm" type="instant_replay_node.py" />

    <!--
        Node: ifcb

        This node communicates with an IFCB.
    -->
    <node name="ifcb" pkg="ifcb" type="ifcb_node.py" />

    <!--
        Node: jvl_motor

        This node communicates with a JVL motor and publishes register status.
    -->
    <node name="jvl_motor" pkg="jvl_motor" type="jvl_motor_node.py" />

    <!--
        Node: ctd_comms

        This node bridges the CTD serial connection to ROS.
    -->
    <node name="ctd_comms" pkg="ds_util_nodes" type="bridge_node" />

    <!--
        Node: rbr_maestro3_ctd

        This node controls the RBR maestro3 CTD.
    -->
    <group if="$(eval arg('ctd') == 'rbr_maestro3')">
        <node name="rbr_maestro3_ctd" pkg="rbr_maestro3_ctd"
            type="rbr_maestro3_node.py" />
    </group>

    <group if="$(eval arg('ctd') == 'aml')">
        <node name="aml_ctd" pkg="aml_ctd" type="aml_ctd_node.py" />
    </group>

    <!--
        Node: web

        This node serves a website for testing purposes.
    -->
    <node name="web" pkg="phyto_arm" type="web_node.py" />

    <!--
        Node: winch

        This node provides winch control.
    -->
    <node name="winch" pkg="phyto_arm" type="winch_node.py" />

    <!--
        Node: rosbridge_server

        This node runs the Rosbridge (http://wiki.ros.org/rosbridge_suite) 
        WebSocket server on port 9090 and is necessary for connecting from 
        Webviz.
    -->
    <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch">
        <arg name="use_compression" value="true" />
    </include>

    <!--
        Node: rtsp_camera_relay

        This node relays frames from the RTSP camera feed.
    -->
    <node pkg="rocon_rtsp_camera_relay" name="rtsp_camera" type="rocon_rtsp_camera_relay_node" />
</launch>
