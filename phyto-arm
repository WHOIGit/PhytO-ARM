#!/usr/bin/env python3
'''
This script is used to launch the PhytO-ARM software.

It reads the system configuration from the provided config file and invokes
the 
'''
import argparse
import os
import shlex

import yaml


# Parse command-line arguments
parser = argparse.ArgumentParser(description=__doc__)
parser.add_argument('config')
args = parser.parse_args()


# Load the config file
with open(args.config, 'rb') as f:
    config = yaml.safe_load(f)


# Build the command-line arguments for roslaunch
rl_args = ['roslaunch', 'phyto_arm', 'phyto_arm.launch']
rl_args.append(f'config_file:={os.path.abspath(args.config)}')

for launch_arg, value in config.get('launch_args', {}).items():
    rl_args.append(f'{launch_arg}:={value}')


# Due to a long-standing bug in the setup.sh script, we must provide to the
# devel/ directory in the _CATKIN_SETUP_DIR environment variable.
#
# This also needs to be an absolute path so that Python can locate packages.
#
# Ref: https://github.com/catkin/catkin_tools/issues/376
parent_dir = os.path.dirname(__file__)
setup_dir = os.path.abspath(os.path.join(parent_dir, 'devel'))
env = {
    '_CATKIN_SETUP_DIR': setup_dir
}

# Build the command to invoke as an escaped string
command = f'. {parent_dir}/.venv/bin/activate && ' + \
          f'. {setup_dir}/setup.sh && ' + \
          ' '.join(shlex.quote(a) for a in rl_args)

# Exec the command, replacing this Python process
os.execle('/bin/sh', '/bin/sh', '-c', command, env)
